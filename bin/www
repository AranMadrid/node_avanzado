require('dotenv').config();

var app = require('../app');
var debug = require('debug')('nodepop:server');
var http = require('http');

const cote = require('cote');
const responder = new cote.Responder({ name: 'thumbail creator' });

responder.on('save-thumbnail', (req, done) => {
    try {

        const result = req.filename;
        done(result);
    } catch (error) {
        console.log(error);
    }
});


var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);
var server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {

        return val;
    }

    if (port >= 0) {

        return port;
    }

    return false;
}


function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;


    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
}